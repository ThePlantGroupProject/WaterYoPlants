#Use web scrape to create database for plant info

#Example for webscrapping

#import bs4
#from urllib.request import urlopen
#from bs4 import BeautifulSoup as soup

#my_url = 'https://www.newegg.com/Video-Cards-Video-Devices/Category/ID-38?Tpk=graphics%20card'

opening url and grabbing the web page
#uClient = urlopen(my_url)
#page_html = uClient.read()
#uClient.close()

html parsing
#page_soup = soup(page_html, 'html.parser')

grabbing all containers with class name = item-container
#containers = page_soup.findAll('div', {'class':'item-container'})

#filename = "products.csv"
#f = open(filename, 'w')

#headers = "brands, product_name, shipping\n"

#f.write(headers)

#container = containers[1]

#for container in containers:

brand = container.div.div.a.img['title']
title_container = container.findAll('a', {'class':'item-title'})
product_name = title_container[0].text
ship_container = container.findAll('li', {'class':'price-ship'})
# use strip() to remove blank spaces before and after text
shipping = ship_container[0].text.strip()
print("brand:" + brand)
print("product_name:" + product_name)
print("shipping:" + shipping)
f.write(brand + ',' + product_name.replace(',' , '|') + ',' + shipping + '\n')
#f.close()
























###Grabs main head titles for database

import urllib.request
import ssl

fhandle=open('plant_headers.txt', 'w+')

# Ignore SSL certificate errors
ctx = ssl.create_default_context()
ctx.check_hostname = False
ctx.verify_mode = ssl.CERT_NONE

### Needs to rotate links 
content = urllib.request.urlopen('https://www.guide-to-houseplants.com/elephants-ear.html')
read_content = content.read()


from bs4 import BeautifulSoup
soup = BeautifulSoup(read_content,'html.parser')

pAll = soup.find_all('b')


fhandle.write(str(pAll) +'/n')
fhandle.close()
print(pAll)


















